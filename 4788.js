/*! For license information please see 4788.js.LICENSE.txt */
"use strict";(self.webpackChunkcoding_with_chrome=self.webpackChunkcoding_with_chrome||[]).push([[4788],{74788:(e,t,r)=>{r.r(t),r.d(t,{default:()=>a});var s=r(67294),o=r(45697),n=r.n(o);const h="oDybJuUFHNPoJgbuQCzh";class i extends s.PureComponent{constructor(e){super(e),this.state={show:!1},this.screenshotIframe=(0,s.createRef)(),this.screenshotLoadTimer=null}handleScreenshotIframeLoad(){console.log("Screenshot instance loaded with url",this.props.url),this.screenshotLoadTimer&&clearTimeout(this.screenshotLoadTimer),this.screenshotLoadTimer=setTimeout((()=>{this.state.show&&(console.warn("Removing Screenshot instance, due to timeout!"),this.setState({show:!1}))}),5e3)}handleScreenshotIframeError(e){this.screenshotLoadTimer&&clearTimeout(this.screenshotLoadTimer),console.error(`Screenshot Instance error with url ${this.props.url}:`,e),this.setState({show:!1})}render(){return s.createElement(s.StrictMode,null,this.props.url&&s.createElement("iframe",{className:h,ref:this.screenshotIframe,src:this.props.url,allow:"geolocation; encrypted-media; xr-spatial-tracking;",onLoad:this.handleScreenshotIframeLoad.bind(this),onError:this.handleScreenshotIframeError.bind(this),title:"Screenshot Container",width:"1080",height:"720"}))}}i.propTypes={url:n().string.isRequired};const a=i}}]);